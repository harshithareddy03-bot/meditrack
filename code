%% Exploratory Data Analysis (EDA) for Smart Prescription System Data
% This script performs EDA on the 'case_history.xlsx' file generated by the
% smartPrescriptionGUI.
clear; close all; clc;

%% 1. Configuration and Data Loading
caseHistoryFile = 'case_history.xlsx';

if isfile(caseHistoryFile)
    T = readtable(caseHistoryFile);
    disp('--- Data Loaded Successfully ---');
    disp(head(T));
    fprintf('Total records loaded: %d\n\n', height(T));
else
    error('The ''case_history.xlsx'' file does not exist. Please run the ''smartPrescriptionGUI'' function a few times to generate some data first.');
end

%% 2. Initial Data Inspection and Cleaning
disp('--- Data Types ---');
disp(T.Properties.VariableTypes);
% Convert 'Symptoms' and 'Medications' columns to cell arrays of strings
T.Symptoms = cellfun(@(x) split(x, ','), T.Symptoms, 'UniformOutput', false);
T.Medications = cellfun(@(x) split(x, ','), T.Medications, 'UniformOutput', false);

% Missing value check
fprintf('\n--- Missing Values Check ---\n');
for varIdx = 1:width(T)
    varName = T.Properties.VariableNames{varIdx};
    numMissing = sum(ismissing(T.(varName)));
    if numMissing > 0
        fprintf('Variable ''%s'' has %d missing values.\n', varName, numMissing);
    end
end

if all(sum(ismissing(T)) == 0)
    disp('No missing values detected in the dataset.');
end

% Standardize Gender to uppercase
T.Gender = upper(T.Gender);

%% 3. Descriptive Statistics
disp('--- Descriptive Statistics ---');

fprintf('\nAge (Years):\n');
fprintf('  Mean: %.2f\n', mean(T.Age));
fprintf('  Median: %.2f\n', median(T.Age));
fprintf('  Min: %.0f\n', min(T.Age));
fprintf('  Max: %.0f\n', max(T.Age));
fprintf('  Standard Deviation: %.2f\n', std(T.Age));

disp('\nGender Distribution:');
genderCounts = groupcounts(T, 'Gender');
disp(genderCounts);

disp('\nTop Symptoms by Frequency:');
allSymptomsList = {};
for i = 1:height(T)
    cleanedSymptoms = cellfun(@(s) lower(strtrim(s)), T.Symptoms{i}, 'UniformOutput', false);
    allSymptomsList = [allSymptomsList; cleanedSymptoms]; %#ok<AGROW>
end
allSymptomsList(cellfun('isempty', allSymptomsList)) = [];
symptomFrequency = groupcounts(table(allSymptomsList), 'allSymptomsList');
disp(symptomFrequency.Properties.VariableNames);
symptomFrequency = sortrows(symptomFrequency, 'GroupCount', 'Desc');
disp(head(symptomFrequency, 10));

disp('\nTop Medications by Frequency:');
allMedicationsList = {};
for i = 1:height(T)
    if ~isempty(T.Medications{i}) && ~all(cellfun('isempty', T.Medications{i})) && ~strcmp(T.Medications{i}{1}, '')
        cleanedMedications = cellfun(@(m) lower(strtrim(m)), T.Medications{i}, 'UniformOutput', false);
        allMedicationsList = [allMedicationsList; cleanedMedications]; %#ok<AGROW>
    end
end
allMedicationsList(cellfun('isempty', allMedicationsList)) = [];
medicationFrequency = groupcounts(table(allMedicationsList), 'allMedicationsList'); % âœ… Fixed column name
medicationFrequency = sortrows(medicationFrequency, 'GroupCount', 'desc');
disp(head(medicationFrequency, 10));

%% 4. Data Visualization
disp('--- Data Visualizations ---');

% Age Distribution Histogram
figure('Name', 'Patient Age Distribution');
histogram(T.Age, 'BinWidth', 5);
title('Distribution of Patient Ages');
xlabel('Age (Years)');
ylabel('Number of Patients');
grid on;

% Gender Distribution
figure('Name', 'Patient Gender Distribution');
bar(genderCounts.Gender, genderCounts.GroupCount, 'FaceColor', [0.3 0.7 0.9]);
title('Patient Gender Distribution');
xlabel('Gender');
ylabel('Number of Patients');
grid on;
ylim([0 max(genderCounts.GroupCount)*1.2]);
% Top 10 Common Symptoms
figure('Name', 'Top 10 Common Symptoms');
top10Symptoms = head(symptomFrequency, 10);
if ~isempty(top10Symptoms)
    bar(categorical(top10Symptoms.allSymptomsList), top10Symptoms.GroupCount, 'FaceColor', [0.9 0.5 0.2]);
    title('Top 10 Most Common Symptoms');
    xlabel('Symptom');
    ylabel('Frequency');
    xtickangle(45);
    grid on;
else
    disp('No symptoms found to plot.');
end

% Top 10 Medications
figure('Name', 'Top 10 Prescribed Medications');
top10Medications = head(medicationFrequency, 10);
if ~isempty(top10Medications)
    bar(categorical(top10Medications.allMedicationsList), top10Medications.GroupCount, 'FaceColor', [0.2 0.8 0.5]);
    title('Top 10 Most Prescribed Medications');
    xlabel('Medication');
    ylabel('Frequency');
    xtickangle(45);
    grid on;
else
    disp('No medications found to plot.');
end

%% 5. Basic Relationship Exploration
disp('--- Relationship Exploration ---');

avgAgeByGender = grpstats(T, 'Gender', 'mean', 'DataVars', 'Age');
disp('\nAverage Age by Gender:');
disp(avgAgeByGender);

% Top 3 Symptoms for Males
disp('\nTop 3 Symptoms for Males:');
maleData = T(strcmp(T.Gender, 'M'), :);
if ~isempty(maleData)
    maleSymptoms = {};
    for i = 1:height(maleData)
        maleSymptoms = [maleSymptoms; cellfun(@(s) lower(strtrim(s)), maleData.Symptoms{i}, 'UniformOutput', false)]; %#ok<AGROW>
    end
    maleSymptoms(cellfun('isempty', maleSymptoms)) = [];
    if ~isempty(maleSymptoms)
        maleSymptomsCat = categorical(maleSymptoms);
        maleSymptomFreq = groupcounts(maleSymptomsCat);

disp('Class of maleSymptomFreq:');
disp(class(maleSymptomFreq));

if istable(maleSymptomFreq)
    disp('Variable names in maleSymptomFreq:');
    disp(maleSymptomFreq.Properties.VariableNames);
    % Sort by count column, typically the second column
    maleSymptomFreq = sortrows(maleSymptomFreq, 2, 'descend');
    disp(head(maleSymptomFreq, 3));
else
    % If not table, create table manually
    [maleCategories, ~, ic] = unique(maleSymptomsCat);
    maleCounts = accumarray(ic, 1);
    maleSymptomFreq = table(maleCategories, maleCounts, 'VariableNames', {'Symptom', 'Count'});
    maleSymptomFreq = sortrows(maleSymptomFreq, 'Count', 'descend');
    disp(head(maleSymptomFreq, 3));
end

    else
        disp('No symptom data for males.');
    end
else
    disp('No male records found.');
end

% Top 3 Symptoms for Females
disp('\nTop 3 Symptoms for Females:');
femaleData = T(strcmp(T.Gender, 'F'), :);
if ~isempty(femaleData)
    femaleSymptoms = {};
    for i = 1:height(femaleData)
        femaleSymptoms = [femaleSymptoms; cellfun(@(s) lower(strtrim(s)), femaleData.Symptoms{i}, 'UniformOutput', false)]; %#ok<AGROW>
    end
    femaleSymptoms(cellfun('isempty', femaleSymptoms)) = [];
    if ~isempty(femaleSymptoms)
        femaleSymptomsCat = categorical(femaleSymptoms);
        % Top 3 Symptoms for Females
disp('\nTop 3 Symptoms for Females:');
femaleData = T(strcmp(T.Gender, 'F'), :);
if ~isempty(femaleData)
    femaleSymptoms = {};
    for i = 1:height(femaleData)
        femaleSymptoms = [femaleSymptoms; cellfun(@(s) lower(strtrim(s)), femaleData.Symptoms{i}, 'UniformOutput', false)]; %#ok<AGROW>
    end
    femaleSymptoms(cellfun('isempty', femaleSymptoms)) = [];
    if ~isempty(femaleSymptoms)
        femaleSymptomsCat = categorical(femaleSymptoms);
        femaleSymptomFreq = groupcounts(femaleSymptomsCat);
        
        % Check if output is a table
        if istable(femaleSymptomFreq)
            disp('Variable names in femaleSymptomFreq:');
            disp(femaleSymptomFreq.Properties.VariableNames);
            % Sort by count column (usually 2nd column)
            femaleSymptomFreq = sortrows(femaleSymptomFreq, 2, 'descend');
            disp(head(femaleSymptomFreq, 3));
        else
            % If not a table, manually convert
            [cats, ~, ic] = unique(femaleSymptomsCat);
            counts = accumarray(ic, 1);
            femaleSymptomFreq = table(cats, counts, 'VariableNames', {'Symptom', 'Count'});
            femaleSymptomFreq = sortrows(femaleSymptomFreq, 'Count', 'descend');
            disp(femaleSymptomFreq(1:min(3,height(femaleSymptomFreq)), :));
        end
    else
        disp('No symptom data for females.');
    end
else
    disp('No female records found.');
end
    else
        disp('No symptom data for females.');
    end
else
    disp('No female records found.');
end

disp('--- EDA Complete ---');
